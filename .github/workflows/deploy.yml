name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r my_python_service/requirements.txt

      - name: Run Python tests
        run: |
          pytest my_python_service/tests

      - name: Package Python lambda
        run: zip -r function.zip .
        working-directory: my_python_service

      - name: Upload Python artifact
        uses: actions/upload-artifact@v2
        with:
          name: python-lambda
          path: my_python_service/function.zip

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Node.js dependencies
        run: npm install
        working-directory: my_ts_service

      - name: Run Node.js build
        run: npm run build
        working-directory: my_ts_service

      - name: Package Node.js lambda
        run: zip -r function.zip .
        working-directory: my_ts_service

      - name: Upload Node.js artifact
        uses: actions/upload-artifact@v2
        with:
          name: typescript-lambda
          path: my_ts_service/function.zip

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
